#!/bin/bash
urouter_dir="/urouter"
source $urouter_dir/urouter.uconf
source $ulang

pulseaudio -D 2>> /dev/null
mkdir -p $bashwebouttmplocuconf
mkdir -p $bashweboutlocuconf
rm $bashweboutlocuconf/$systemcontrolweboutuconf &>> /dev/null
rm $bashweboutlocuconf/$topweboutuconf &>> /dev/null
echo $M2ZmOTgy > $bashwebouttmplocuconf$systemcontrolweboutuconf
echo $M2ZmOTgy > $bashwebouttmplocuconf$topweboutuconf
ln -s $bashwebouttmplocuconf$systemcontrolweboutuconf $bashweboutlocuconf &>> /dev/null
ln -s $bashwebouttmplocuconf$topweboutuconf $bashweboutlocuconf &>> /dev/null
$binlocuconf/urouter-color && clear
######
#renkler
######
Red='\033[0;31m'
NC='\033[0m' # No Color
Blue='\033[0;34m'
Black='\033[0;30m'
Green='\033[0;32m'
Orange='\033[0;33m'
Cyan='\033[0;36m'
Purple='\033[0;35m'
LRed='\033[1;31m'
Yellow='\033[1;33m'
LBlue='\033[1;34m'
LGreen='\033[1;32m'
LCyan='\033[1;36m'
#####
#çalışma alanı
##



function displaytime {
  local T=$1
  local D=$((T/60/60/24))
  local H=$((T/60/60%24))
  local M=$((T/60%60))
  local S=$((T%60))
  (( $D > 0 )) && printf '%d gün ' $D
  (( $H > 0 )) && printf '%d saat ' $H
  (( $M > 0 )) && printf '%d dakika ' $M
  (( $D > 0 || $H > 0 || $M > 0 )) && printf 'and '
  printf '%d saniye\n' $S
}

#popip=`pop-ip`
#popnetname=`whois $popip | grep 'netname:' | cut -d: -f2 | awk '{ print $1}' `
#popnetasn=`whois $popip | grep 'origin' | cut -d: -f2 | awk '{ print $1}' `
#allline='8'
#ellline=$allline
#toplamline=`expr 9 + $websitesline + $servicesline`
#resize -s $toplamline 65 > /dev/null
###
#döngü başlangıcı
###
for (( ; ; ))
do
###
#Permission
###
mkdir -p $uroutertmp/iot/*
chmod 777 $uroutertmp/iot/*
chmod 755 $uroutertmp/urouter-system-control/*
ellline='0'
###
#ağ testi
###
source $urouter_dir/urouter.uconf



printf "${LRed}$pnameuconf ${LGreen} $ZmU3YTNh ${LBlue} $hostnameuconf ${NC} $locationuconf # CPU $cputempuconf°\n"
#echo
ppp=`ifconfig $internetinterfaceconf | grep 'inet addr:' | cut -d: -f2 | awk '{ print $1}'`
ipv4out=`ip r | grep default | cut -d ' ' -f 3`
#tun=`ifconfig tun0 | grep 'inet addr:' | cut -d: -f2 | awk '{ print $1}'` 
#tap=`ifconfig tap0 | grep 'inet addr:' | cut -d: -f2 | awk '{ print $1}'`
pppusa=`ifconfig $internetinterfaceconf | grep 'RX bytes:'`
popip=`ifconfig $internetinterfaceconf | grep 'inet addr:' | cut -d: -f2 | awk '{ print $1}'`
#popnetname=`whois $popip | grep 'netname:' | cut -d: -f2 | awk '{ print $1}' `

#popnetasn=`whois $popip | grep 'origin' | cut -d: -f2 | awk '{ print $1}' `




#inactive
#failed
#active
###################################################
source $ulang

ping -q -w 1 -c 1 ${ppp} > /dev/null && printf "$MDhkODc" || echo `
printf "$MjE4ODZk"
echo $MjE4ODZk| $uconfspeak >>/dev/null
killall -9 pppd
#$etclocuconf/ppp/provider
pppd call provideruconf
`

echo $pppusa
#if [ "${ipv4out:-null}" = "10.0.7.1" ]; then printf "${LCyan}Amerika ${NC}çıkıştasın  ${NC}.\n" ;  fi 
#if [ "${ipv4out:-null}" = "10.0.5.1" ]; then printf "${LCyan}Avrupa ${NC}çıkıştasın  ${NC}.\n" ;  fi 
#echo
#ping -q -w 5 -c 1 10.0.5.1 -I tap0 > /dev/null && printf "${LCyan}Almanya ${LBlue}bağlantın ${LGreen} var ${NC} \n" || pop-baglanti-restart-avrupa > /dev/null
#ping -q -w 5 -c 1 -I tun0 10.0.7.1 > /dev/null && printf "${LCyan}Amerika ${LBlue}bağlantın ${LGreen} var ${NC} \n" || pop-baglanti-restart-amerika > /dev/null

#ping -q -w 1 -c 1 ${ipv4out} > /dev/null || pop-amerika > /dev/null && ping -q -w 1 -c 1 -I tun0 10.0.7.1 > /dev/null || pop-almanya > /dev/null && ping -q -w 1 -c 1 -I tap0 10.0.5.1 > /dev/null
cat $uroutertmp/urouter-system-control/server2

###
#servis kontrol
###
printf "${LCyan} ######## ${LGreen}######## ${LRed}######## ${NC}######## \n" > $uroutertmp/urouter-system-control/server2
SERVICEFILE=$systemcontrolloc/services.txt
servicesline=`wc -l < $systemcontrolloc/services.txt`
tllline=`if [ -z "$ellline" ]; then ellline='0'; else echo $ellline; fi`
allline=`expr $tllline + $servicesline + 1`
ellline=$allline

function test {
if [ `echo $p | cut -c1` = "#" ];
then
allline=`expr $allline - 1`
else
if [ $(systemctl is-active $p) = active ]; then printf "${Cyan} $p ${NC}şuanda ${Green}Aktif${NC}.\n" >> $uroutertmp/urouter-system-control/server2 ; 	else printf "${Cyan} $p ${NC}şuanda ${Orange}Sıkıntılı${NC}.\n" >> $uroutertmp/urouter-system-control/server2 && echo $p sıkıntılı | espeak -v tr -g 13&& service $p restart ; fi 

fi
}

# main loop
while read p; do
  test $p
done < $SERVICEFILE


####
#site kontrol
####
if [ "$syscheckwebsitesenableduconf" = 1 ];
then
printf "${LCyan} ######## ${LGreen}######## ${LRed}######## ${NC}######## \n" >> $uroutertmp/urouter-system-control/server2
WEBSITESFILE=$systemcontrolloc/websites.txt
websitesline=`wc -l < $systemcontrolloc/websites.txt`
tllline=`if [ -z "$ellline" ]; then ellline='0'; else echo $ellline; fi`
allline=`expr $tllline + $websitesline + 1`
ellline=$allline

function test {
if [ `echo $p | cut -c1` = "#" ];
then
allline=`expr $allline - 1`
else
 if [ $(curl --write-out %{http_code} --silent --output /dev/null  $p ) = 200 ]; then printf "${Cyan} $p ${NC}şuanda ${Green}açık${NC}. \n"  >> $uroutertmp/urouter-system-control/server2 ; else printf "${Cyan}$p ${NC}şuanda ${Red}kapalı${NC}.\n"  >> $uroutertmp/urouter-system-control/server2 && echo $p kapalı | espeak -v tr -g 13; fi 
fi
  
}

# main loop
while read p; do
  test $p
done < $WEBSITESFILE

fi

###
#PINGHOSTS
###
if [ "$syscheckpingenableduconf" = 1 ];
then
printf "${LCyan} ######## ${LGreen}######## ${LRed}######## ${NC}######## \n" >> $uroutertmp/urouter-system-control/server2

pingline=`wc -l < $systemcontrolloc/pings.txt`
PINGHOSTS=$systemcontrolloc/pings.txt
tllline=`if [ -z "$ellline" ]; then ellline='0'; else echo $ellline; fi`
allline=`expr $tllline + $pingline + 1`


function pingresp {
if [ `echo $p | cut -c1` = "#" ];
then
allline=`expr $allline - 1`
else
pingva=`echo "$p" | grep  -v "^#\|^'\|^\/\/" | cut -d' ' -f2`
if [ ! -z "$pingva" ];
then

if [ "$pingva" = 4 ];
then
pingvaba=`echo "$p" | grep  -v "^#\|^'\|^\/\/" | cut -d' ' -f1`
pingtime=`ping -c 2 $pingvaba | tail -1| awk '{print $4}' | cut -d '/' -f 2`
printf "${Cyan} $p ${NC}olan ping ${Blue}$pingtime${NC}.\n" >> $uroutertmp/urouter-system-control/server2
elif [ "$pingva" = 6 ];
then
pingvaba=`echo "$p" | grep  -v "^#\|^'\|^\/\/" | cut -d' ' -f1`
pingtime=`ping6 -c 2 $pingvaba | tail -1| awk '{print $4}' | cut -d '/' -f 2`
printf "${Cyan} $p ${NC}olan ping ${Blue}$pingtime${NC}.\n" >> $uroutertmp/urouter-system-control/server2

else
pingvaba=`echo "$p" | grep  -v "^#\|^'\|^\/\/" | cut -d' ' -f1`
ipnametype=`$ubin/urouter-info-ipversion $pingvaba`

if [ "$ipnametype" = IPv4 ];
then
pingtime=`ping -c 2 $p | tail -1| awk '{print $4}' | cut -d '/' -f 2` 
printf "${Cyan} $p ${NC}olan ping ${Blue}$pingtime${NC}.\n" >> $uroutertmp/urouter-system-control/server2
elif [ "$ipnametype" = IPv6 ];
then
pingtime=`ping6 -c 2 $p | tail -1| awk '{print $4}' | cut -d '/' -f 2`
printf "${Cyan} $p ${NC}olan ping ${Blue}$pingtime${NC}.\n" >> $uroutertmp/urouter-system-control/server2
elif [ "$ipnametype" = Name ];
then
pingtime=`ping -c 2 $p | tail -1| awk '{print $4}' | cut -d '/' -f 2`
printf "${Cyan} $p ${NC}olan ping ${Blue}$pingtime${NC}.\n" >> $uroutertmp/urouter-system-control/server2
else
echo "$p wrong domain or ip"
fi

fi
fi
fi
}


# main loop
while read p; do
  pingresp $p
done < $PINGHOSTS

ellline=$allline


fi
###
#Modem Status
###
printf "${LCyan} ######## ${LGreen}######## ${LRed}######## ${NC}######## \n" >> $uroutertmp/urouter-system-control/server2

tllline=`if [ -z "$ellline" ]; then ellline='0'; else echo $ellline; fi`
allline=`expr $tllline + 5`
ellline=$allline

$binlocuconf/urouter-modem-stat &>>/dev/null

MODEMLOG=$uroutertmp/urouter-system-control/adslmodem

uploadnow0=`grep "upstreamCurrRate=" $MODEMLOG | cut -d'=' -f2 | tr -d '\r'`
uploadmax0=`grep "upstreamMaxRate=" $MODEMLOG | cut -d'=' -f2 | tr -d '\r'`
downloadnow0=`grep "downstreamCurrRate=" $MODEMLOG | cut -d'=' -f2 | tr -d '\r'`
downloadmax0=`grep "downstreamMaxRate=" $MODEMLOG | cut -d'=' -f2 | tr -d '\r'`

uploadnow=`echo "scale=2;$uploadnow0/1024" | bc`
uploadmax=`echo "scale=2;$uploadmax0/1024" | bc`
downloadnow=`echo "scale=2;$downloadnow0/1024" | bc`
downloadmax=`echo "scale=2;$downloadmax0/1024" | bc`

connecttime0=`grep "totalStart=" $MODEMLOG | cut -d'=' -f2 |tr -d '\r'`
conecttime=`displaytime $connecttime0`
connecttype=`grep "X_TP_AdslModulationCfg=" $MODEMLOG | cut -d'=' -f2 | tr -d '\r'`

upNS0=`grep "upstreamNoiseMargin=" $MODEMLOG | cut -d'=' -f2 | tr -d '\r'`
downNM0=`grep "downstreamNoiseMargin=" $MODEMLOG | cut -d'=' -f2 | tr -d '\r'`
upA0=`grep "upstreamAttenuation=" $MODEMLOG | cut -d'=' -f2 | tr -d '\r'`
downA0=`grep "downstreamAttenuation=" $MODEMLOG | cut -d'=' -f2 | tr -d '\r'`

upNS=`echo "scale=1;$upNS0/10" | bc`
downNS=`echo "scale=1;$downNM0/10" | bc`
upA=`echo "scale=1;$upA0/10" | bc`
downA=`echo "scale=1;$downA0/10" | bc`

upPW0=`grep "upstreamPower=" $MODEMLOG | cut -d'=' -f2 | tr -d '\r'`
downPW0=`grep "downstreamPower=" $MODEMLOG | cut -d'=' -f2 | tr -d '\r'`

upPW=`echo "scale=1;$upPW0/10" | bc`
downPW=`echo "scale=1;$downPW0/10" | bc`
##### 4 Satır #######
printf "${Red} $downloadmax ${NC}Mb olan Download dan dan${LRed} $downloadnow ${NC}Mb sağlanıyor.\n" >> $uroutertmp/urouter-system-control/server2
printf "${Green} $uploadmax ${NC}Mb olan Upload dan${LGreen} $uploadnow ${NC}Mb sağlanıyor.\n" >> $uroutertmp/urouter-system-control/server2
printf "${LCyan} $connecttype${NC} Bağlantısı ${Cyan}$conecttime.\n" >> $uroutertmp/urouter-system-control/server2
printf "${Orange} Sinyal/Gürültü D:$downNS U:$upNS ${Yellow}Hat Zayıflaması D:$downA U:$upA ${Cyan}Güç D:$downPW U:$upPW ${NC} \n" >> $uroutertmp/urouter-system-control/server2

###
#refresh
###
tput cuu $allline && tput el
#echo $allline
###
#top
###

cat $uroutertmp/urouter-system-control/server2

$binlocuconf/urouter-system-control-php | $binlocuconf/urouter-ansi2html --palette=solarized --bg=dark > $uroutertmp/urouter-system-control/web/kontrol-server2.html

top -b -n 1 > $uroutertmp/urouter-system-control/server2-top
echo "Son yapılan kontrol = $(date)" >> $uroutertmp/urouter-system-control/server2-top
cat $uroutertmp/urouter-system-control/server2-top | $binlocuconf/urouter-ansi2html --palette=solarized --bg=dark > $uroutertmp/urouter-system-control/web/top-server2.html

sleep 40
clear
done
###################################################
